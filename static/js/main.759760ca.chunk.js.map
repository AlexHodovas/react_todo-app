{"version":3,"sources":["Header.js","MainTodoList.js","Footer.js","App.js","index.js"],"names":["Header","submitForm","change","value","className","onSubmit","onChange","placeholder","autoFocus","MainTodoList","checkAll","filteredTodos","check","destroy","style","display","id","type","htmlFor","map","todo","completed","key","checked","e","text","onClick","Footer","howManyTodosLeft","filters","currentFilter","setFilter","clearCompleted","filter","href","App","state","todos","title","allCompleted","selectedFilter","addTodo","setState","myTodo","Date","target","preventDefault","trim","persist","every","length","filterValue","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"wQAwBeA,EArBA,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,OAAQC,EAAvB,EAAuBA,MAAvB,OACb,4BAAQC,UAAU,UAChB,yCACA,0BAAMC,SAAUJ,GACd,2BACEK,SAAUJ,EACVC,MAAOA,EACPC,UAAU,WACVG,YAAY,yBACZC,UAAU,QC4BHC,EArCM,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAUC,EAAZ,EAAYA,cAAeC,EAA3B,EAA2BA,MAAOC,EAAlC,EAAkCA,QAAlC,OACnB,6BAAST,UAAU,OAAOU,MAAO,CAAEC,QAAS,UAC1C,2BACET,SAAUI,EACVM,GAAG,aACHZ,UAAU,aACVa,KAAK,aAET,2BAAOC,QAAQ,cAAf,wBACE,wBAAId,UAAU,aACVO,EAAcQ,KAAK,SAAAC,GAAI,OACvB,wBAAIhB,UAAWgB,EAAKC,UAAY,YAAc,GAAIC,IAAKF,EAAKJ,IAC1D,yBAAKZ,UAAU,QACb,2BACEY,GAAII,EAAKJ,GACTZ,UAAU,SACVa,KAAK,WACLM,QAASH,EAAKC,UACdf,SAAU,SAAAkB,GAAC,OAAIZ,EAAMY,EAAGJ,EAAKJ,OAE/B,2BAAOE,QAASE,EAAKJ,IAAKI,EAAKK,MAC/B,4BAAQrB,UAAU,UAAUsB,QAAS,kBAAMb,EAAQO,EAAKJ,eCqBrDW,EA1CA,SAAC,GAAD,IAAGC,EAAH,EAAGA,iBAAkBC,EAArB,EAAqBA,QAASC,EAA9B,EAA8BA,cAAeC,EAA7C,EAA6CA,UAAWC,EAAxD,EAAwDA,eAAxD,OACb,4BAAQ5B,UAAU,UACd,0BAAMA,UAAU,cACd,gCACIwB,GAAmB,IAEnBA,EAAgC,cAAb,YAEzB,wBAAIxB,UAAU,WAEVyB,EAAQV,KAAK,SAAAc,GAAM,OACjB,wBAAIX,IAAKW,GACP,uBACEC,KAAI,YAAOD,GACX7B,UAAY0B,IAAkBG,EAAS,WAAa,GACpDP,QAAS,kBAAMK,EAAUE,KAEtBA,QAMb,4BACE7B,UAAU,kBACVU,MAAO,CAAEC,QAAS,SAClBW,QAASM,GAHX,qBC6GSG,E,2MAhIbC,MAAQ,CACNC,MAAO,GACPC,MAAO,GACPR,cAAe,GACfS,cAAc,EACdC,eAAgB,GAChBX,QAAS,CAAC,MAAO,SAAU,c,EAG7BY,QAAU,SAAChB,GACT,EAAKiB,UAAU,SAAAN,GACb,IAAMO,EACJ,CACElB,OACAJ,WAAW,EACXL,IAAM,IAAI4B,MAGd,MAAO,CAAEP,MAAM,GAAD,mBAAMD,EAAMC,OAAZ,CAAmBM,S,EAIrCzC,OAAS,SAACsB,GACR,EAAKkB,SAAS,CACZJ,MAAOd,EAAEqB,OAAO1C,S,EAIpBF,WAAa,SAACuB,GACZA,EAAEsB,iBAEG,EAAKV,MAAME,MAAMS,SAItB,EAAKN,QAAQ,EAAKL,MAAME,OACxB,EAAKI,SAAS,CAAEJ,MAAO,O,EAGzBzB,QAAU,SAACG,GACT,EAAK0B,UAAS,SAAAN,GAAK,MAAK,CACtBC,MAAOD,EAAMC,MAAMJ,QAAO,SAAAb,GAAI,OAAIA,EAAKJ,KAAOA,U,EAIlDJ,MAAQ,SAACY,EAAGR,GACVQ,EAAEwB,UAEF,EAAKN,UAAS,SAAAN,GAAK,MAAK,CACtBC,MAAOD,EAAMC,MAAMlB,KAAI,SAAAC,GACrB,OAAIA,EAAKJ,KAAOA,EACPI,EAGF,eACFA,EADL,CAEEC,UAAWG,EAAEqB,OAAOtB,kB,EAM5Bb,SAAW,WACT,EAAKgC,UAAS,gBAAGL,EAAH,EAAGA,MAAH,MAA8B,CAC1CE,cADY,EAAUA,aAEtBF,MAAOA,EAAMlB,KAAI,SAAAC,GAAI,sBACfA,EADe,CAEnBC,WAAY,EAAKe,MAAMC,MAAMY,OAAM,SAAA7B,GAAI,OAAIA,EAAKC,uB,EAKtDO,iBAAmB,WAClB,OAAO,EAAKQ,MAAMC,MAAMa,OAAS,EAAKd,MAAMC,MACxCJ,QAAO,SAACb,GAAD,OAA6B,IAAnBA,EAAKC,aAAoB6B,Q,EAG/CnB,UAAY,SAACoB,GACX,EAAKT,SAAS,CACZZ,cAAeqB,K,EAInBxC,cAAgB,WACd,OAAQ,EAAKyB,MAAMN,eACjB,IAAK,YAAc,OAAO,EAAKM,MAAMC,MAAMJ,QAAQ,SAAAb,GAAI,OAAIA,EAAKC,aAChE,IAAK,SAAW,OAAO,EAAKe,MAAMC,MAAMJ,QAAQ,SAAAb,GAAI,OAAKA,EAAKC,aAC9D,IAAK,MACL,QAAS,OAAO,EAAKe,MAAMC,Q,EAI/BL,eAAiB,WACf,EAAKU,UAAS,kBAAa,CAACL,MAAd,EAAEA,MAAyBJ,QAAQ,SAAAb,GAAI,OAAKA,EAAKC,kB,wEAGvD,IAAD,EAC0C+B,KAAKhB,MAA9CC,EADD,EACCA,MAAOC,EADR,EACQA,MAAOR,EADf,EACeA,cAAeD,EAD9B,EAC8BA,QAErC,OACE,6BAASzB,UAAU,WACjB,kBAAC,EAAD,CACEH,WAAYmD,KAAKnD,WACjBC,OAAQkD,KAAKlD,OACbC,MAAOmC,IAET,kBAAC,EAAD,CACE5B,SAAU0C,KAAK1C,SACfC,cAAgByC,KAAKzC,gBACrBC,MAAOwC,KAAKxC,MACZC,QAASuC,KAAKvC,UAGdwB,EAAMa,OAAS,GACf,kBAAC,EAAD,CACEtB,iBAAkBwB,KAAKxB,mBACvBC,QAASA,EACTC,cAAeA,EACfC,UAAWqB,KAAKrB,UAChBC,eAAgBoB,KAAKpB,sB,GAxHfqB,IAAMC,WCDxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.759760ca.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({ submitForm, change, value }) => (\n  <header className=\"header\">\n    <h1>todos App</h1>\n    <form onSubmit={submitForm}>\n      <input\n        onChange={change}\n        value={value}\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        autoFocus=\"\"\n      />\n      </form>\n  </header>\n)\n\nHeader.propTypes = { \n  submitForm: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n  change: PropTypes.func.isRequired\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst MainTodoList = ({checkAll, filteredTodos, check, destroy}) => (\n  <section className=\"main\" style={{ display: 'block' }}>\n    <input \n      onChange={checkAll}\n      id=\"toggle-all\" \n      className=\"toggle-all\" \n      type=\"checkbox\" \n    />\n  <label htmlFor=\"toggle-all\">Mark all as complete</label>\n    <ul className=\"todo-list\">\n      { filteredTodos.map( todo =>  (\n        <li className={todo.completed ? \"completed\" : \"\"} key={todo.id} >\n          <div className=\"view\">\n            <input \n              id={todo.id}\n              className=\"toggle\" \n              type=\"checkbox\" \n              checked={todo.completed}\n              onChange={e => check(e, todo.id)}\n            />\n            <label htmlFor={todo.id}>{todo.text}</label>\n            <button className=\"destroy\" onClick={() => destroy(todo.id)}></button>\n          </div>\n        </li>\n      ))\n      }\n    </ul> \n  </section>\n)\n\nMainTodoList.propTypes = { \n  checkAll: PropTypes.func.isRequired,\n  filteredTodos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  check: PropTypes.func.isRequired,\n  destroy: PropTypes.func.isRequired\n};\n\nexport default MainTodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Footer = ({ howManyTodosLeft, filters, currentFilter, setFilter, clearCompleted }) => ( \n  <footer className=\"footer\">\n      <span className=\"todo-count\">\n        <strong>\n          {!howManyTodosLeft ? '' : howManyTodosLeft}\n        </strong>\n          {!howManyTodosLeft ? \"all done\" : \" items left\" }\n      </span>\n      <ul className=\"filters\">\n        {\n          filters.map( filter => (\n            <li key={filter}>\n              <a \n                href={`#/${filter}`}\n                className={(currentFilter === filter ? 'selected' : '')}\n                onClick={() => setFilter(filter)}\n                >\n                  {filter}\n              </a>\n            </li>\n          ))\n        }\n      </ul>\n      <button \n        className=\"clear-completed\" \n        style={{ display: 'block' }}\n        onClick={clearCompleted}\n        >\n        Clear completed\n      </button>\n    </footer>\n)\n\nFooter.propTypes = { \n  howManyTodosLeft: PropTypes.number.isRequired,\n  filters: PropTypes.arrayOf(PropTypes.string).isRequired,\n  currentFilter: PropTypes.string.isRequired,\n  setFilter: PropTypes.func.isRequired,\n  clearCompleted: PropTypes.func.isRequired,\n};\n\n    \nexport default Footer;\n\n\n\n","import React from 'react';\n\nimport Header from './Header';\nimport MainTodoList from './MainTodoList';\nimport Footer from './Footer';\n\nclass App extends React.Component {\n  state = { \n    todos: [],\n    title: '',\n    currentFilter: '',\n    allCompleted: false,\n    selectedFilter: '',\n    filters: ['All', 'Active', 'Completed']\n  }\n\n  addTodo = (text) => {\n    this.setState( state => {\n      const myTodo = (\n        {\n          text,\n          completed: false,\n          id: +(new Date()),\n        }\n      )\n      return { todos: [...state.todos, myTodo] };\n    });\n  }\n    \n  change = (e) => {\n    this.setState({\n      title: e.target.value,\n    });\n  }\n\n  submitForm = (e) => { \n    e.preventDefault();\n\n    if (!this.state.title.trim()) {\n      return;\n    } \n    \n    this.addTodo(this.state.title)\n    this.setState({ title: '' })\n  }\n\n  destroy = (id) => {\n    this.setState(state => ({\n      todos: state.todos.filter(todo => todo.id !== id),\n    }))\n  } \n\n  check = (e, id) => {\n    e.persist();\n\n    this.setState(state => ({\n      todos: state.todos.map(todo => {\n        if (todo.id !== id) {\n          return todo;\n        }\n\n        return {\n          ...todo,\n          completed: e.target.checked,\n        };\n      }),\n    }));\n  };\n\n  checkAll = () => {\n    this.setState(({ todos, allCompleted }) => ({\n      allCompleted: !allCompleted,\n      todos: todos.map(todo => ({\n         ...todo,\n        completed: !this.state.todos.every(todo => todo.completed)\n      })),\n    }));\n  };\n\n  howManyTodosLeft = () => { \n   return this.state.todos.length - this.state.todos\n      .filter((todo) => todo.completed === true).length\n  }\n\n  setFilter = (filterValue) => {\n    this.setState({\n      currentFilter: filterValue,\n    });\n  };\n\n  filteredTodos = () => {\n    switch (this.state.currentFilter) {\n      case 'Completed':  return this.state.todos.filter( todo => todo.completed)\n      case 'Active':  return this.state.todos.filter( todo => !todo.completed)\n      case 'All': \n      default: return this.state.todos\n    }\n  }\n\n  clearCompleted = () => {\n    this.setState(({todos})=> ({todos: todos.filter( todo => !todo.completed)}))\n  }\n\n  render() {\n    const { todos, title, currentFilter, filters } = this.state;\n    \n    return (\n      <section className=\"todoapp\">\n        <Header \n          submitForm={this.submitForm}\n          change={this.change}\n          value={title}\n        />\n        <MainTodoList\n          checkAll={this.checkAll} \n          filteredTodos ={this.filteredTodos()} \n          check={this.check} \n          destroy={this.destroy} \n        />\n       { \n          todos.length > 0 && ( \n          <Footer  \n            howManyTodosLeft={this.howManyTodosLeft()} \n            filters={filters} \n            currentFilter={currentFilter}\n            setFilter={this.setFilter}\n            clearCompleted={this.clearCompleted}\n          />\n        )\n       }\n      </section>\n    );\n  }\n}\n  \nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}